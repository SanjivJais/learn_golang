1. Slices are same as arrays but are flexible to shrink or grow to fit content which is not possible in arrays

In Go, there are several ways to create a slice:

1. Using the []datatype{values} format
2. Create a slice from an array
3. Using the make() function



✅ Append Elements To a Slice
You can append elements to the end of a slice using the append()function:

Syntax
slice_name = append(slice_name, element1, element2, ...)

You may append one slice to another in the same way


✅✅ Memory efficiency

When using slices, Go loads all the underlying elements into the memory.

If the array is large and you need only a few elements, it is better to copy those elements using the copy() function.

The copy() function creates a new underlying array with only the required elements for the slice. This will reduce the memory used for the program. 

Syntax
copy(dest, src)


✅✅✅ WHY USE copy()?
=> It improves memeory efficiency by copying required portion of a slice independently, i.e., if a new slice is assigned values by slicing another slice
, though this is a new slice, it would still be dependent on the original array/slice. This might unnecessarily alter the new slice if the original slice is changed.

However, if copy() function is used, the new slice will be independent on the original slice and the original slice can be safely garbage collected if it's no longer needed! 
